/*
A simple deposit contract between a flour-Farm and a Client. The two parties
agree about the cost of flour (say, per kg).
The contract ends after 1 year (1Y)

At the end, the flour that has not been sold is returned to the Farm.
*/


stipula Deposit {
	asset flour
	field cost_flour
	init Start

  	agreement (Client, Farm)(cost_flour) {
  		Client, Farm : cost_flour
  	} ==> @Start

	@Start Farm : begin()[]{
  		now + 1Y >> @Run { flour -o Farm } ==> @End
	} ==> @Run

	@Run Farm : send()[h]{
  		h -> Client
  		h -o flour
	} ==> @Run

	@Run Client : buy()[w](w<=(flour*cost_flour)){
		(w/cost_flour) -o flour, Client
	} ==> @Run

}