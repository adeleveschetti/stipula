stipula Bike_Rental {
asset wallet
field cost 
field rentingTime
field code
party Borrower
init Q
agreement (Lender,Borrower,Authority)(rentingTime,cost){ 
Lender , Borrower: rentingTime , cost
} ==> @Inactive

@Inactive Lender : offer(x) { 
x -> code;
_
} ==> @Payment

@Payment Borrower : pay[h] (h == cost) {
h -○ wallet
code -> Borrower;
now + rentingTime >> @Using {
	h -○ wallet2
} ==> @Return 
} ==> @Using

@Using Borrower : end { 
	now -> Lender;
	_
} ==> @Return

@Return Lender : rentalOk { 
	wallet -○ Lender;
	_
} ==> @End

@Using Lender, Borrower : dispute(x) { 
	x -> _ ;
	_
} ==> @Dispute

@Dispute Authority : verdict(x,y) (y>=0 && y<=1) {
	x -> Lender, Borrower 
	(y*wallet) -○ wallet, Lender 
	wallet -○ Borrower;
	_
}==> @End
}